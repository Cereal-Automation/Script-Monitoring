/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.cereal.stockx.api.model

import com.cereal.stockx.api.model.Adjustment

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The payout object that contains the payout details and any adjustments
 *
 * @param totalPayout The total amount to be paid for the sale of the product
 * @param salePrice The amount the product was sold for
 * @param totalAdjustments The sum of all adjustments made
 * @param currencyCode The currency code this product is being listed in. If not provided, it will default to USD.  Only valid currencies supported on stockx.com are supported via API.<br><br>Available values: \"AUD\", \"CAD\", \"CHF\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"KRW\", \"MXN\", \"NZD\", \"SGD\", \"USD\"
 * @param adjustments The payout adjustment details if applicable
 */


data class Payout (

    /* The total amount to be paid for the sale of the product */
    @Json(name = "totalPayout")
    val totalPayout: kotlin.String,

    /* The amount the product was sold for */
    @Json(name = "salePrice")
    val salePrice: kotlin.String,

    /* The sum of all adjustments made */
    @Json(name = "totalAdjustments")
    val totalAdjustments: kotlin.String,

    /* The currency code this product is being listed in. If not provided, it will default to USD.  Only valid currencies supported on stockx.com are supported via API.<br><br>Available values: \"AUD\", \"CAD\", \"CHF\", \"EUR\", \"GBP\", \"HKD\", \"JPY\", \"KRW\", \"MXN\", \"NZD\", \"SGD\", \"USD\" */
    @Json(name = "currencyCode")
    val currencyCode: kotlin.String,

    /* The payout adjustment details if applicable */
    @Json(name = "adjustments")
    val adjustments: kotlin.collections.List<Adjustment>

) {


}

