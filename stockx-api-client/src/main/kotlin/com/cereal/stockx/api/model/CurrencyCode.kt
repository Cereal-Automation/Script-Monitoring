/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.cereal.stockx.api.model


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Currency codes we support at StockX
 *
 * Values: AUD,BRL,CAD,CHF,CLP,CNY,DKK,EUR,GBP,HKD,HUF,IDR,ILS,JPY,KRW,KWD,MOP,MXN,MYR,NOK,NZD,PEN,PHP,PLN,SEK,SGD,THB,TWD,USD,VND
 */

@JsonClass(generateAdapter = false)
enum class CurrencyCode(val value: kotlin.String) {

    @Json(name = "AUD")
    AUD("AUD"),

    @Json(name = "BRL")
    BRL("BRL"),

    @Json(name = "CAD")
    CAD("CAD"),

    @Json(name = "CHF")
    CHF("CHF"),

    @Json(name = "CLP")
    CLP("CLP"),

    @Json(name = "CNY")
    CNY("CNY"),

    @Json(name = "DKK")
    DKK("DKK"),

    @Json(name = "EUR")
    EUR("EUR"),

    @Json(name = "GBP")
    GBP("GBP"),

    @Json(name = "HKD")
    HKD("HKD"),

    @Json(name = "HUF")
    HUF("HUF"),

    @Json(name = "IDR")
    IDR("IDR"),

    @Json(name = "ILS")
    ILS("ILS"),

    @Json(name = "JPY")
    JPY("JPY"),

    @Json(name = "KRW")
    KRW("KRW"),

    @Json(name = "KWD")
    KWD("KWD"),

    @Json(name = "MOP")
    MOP("MOP"),

    @Json(name = "MXN")
    MXN("MXN"),

    @Json(name = "MYR")
    MYR("MYR"),

    @Json(name = "NOK")
    NOK("NOK"),

    @Json(name = "NZD")
    NZD("NZD"),

    @Json(name = "PEN")
    PEN("PEN"),

    @Json(name = "PHP")
    PHP("PHP"),

    @Json(name = "PLN")
    PLN("PLN"),

    @Json(name = "SEK")
    SEK("SEK"),

    @Json(name = "SGD")
    SGD("SGD"),

    @Json(name = "THB")
    THB("THB"),

    @Json(name = "TWD")
    TWD("TWD"),

    @Json(name = "USD")
    USD("USD"),

    @Json(name = "VND")
    VND("VND");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is CurrencyCode) "$data" else null

        /**
         * Returns a valid [CurrencyCode] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): CurrencyCode? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

