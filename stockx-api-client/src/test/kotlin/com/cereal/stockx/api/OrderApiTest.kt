/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.cereal.stockx.api

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.cereal.stockx.api.OrderApi
import com.cereal.stockx.api.model.DetailedOrder
import com.cereal.stockx.api.model.Orders
import com.cereal.stockx.api.model.PublicApiError

class OrderApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OrderApi
        //val apiInstance = OrderApi()

        // to test getHistoricalOrders
        should("test getHistoricalOrders") {
            // uncomment below to test getHistoricalOrders
            //val fromDate : kotlin.String = fromDate_example // kotlin.String | The start date of when the orders were created. Format is YYYY-MM-DD.
            //val toDate : kotlin.String = toDate_example // kotlin.String | The end date of when the orders were created. Format is YYYY-MM-DD.
            //val pageNumber : kotlin.Int = 1 // kotlin.Int | The requested page number. By default the page number is 1
            //val pageSize : kotlin.Int = 100 // kotlin.Int | The number of orders to be returned. By default the number is 10
            //val orderStatus : kotlin.String = CANCELED // kotlin.String | To filter your Orders by a given order status<br><br>Available values: \"AUTHFAILED\", \"DIDNOTSHIP\", \"CANCELED\", \"COMPLETED\", \"RETURNED\"
            //val productId : kotlin.String = productId_example // kotlin.String | Unique StockX product ID
            //val variantId : kotlin.String = variantId_example // kotlin.String | Unique StockX variant ID
            //val inventoryTypes : kotlin.String = STANDARD // kotlin.String | Comma-separated list of inventory type(s). This field must not include array brackets [] or quotation marks (\"| ''). The inventory types are STANDARD or FLEX.
            //val initiatedShipmentDisplayIds : kotlin.String = initiatedShipmentDisplayIds_example // kotlin.String | The shipment's unique display id associated with the order. Note: This is the same ID generated when a Flex inbound list is created in StockX Pro.
            //val result : Orders = apiInstance.getHistoricalOrders(fromDate, toDate, pageNumber, pageSize, orderStatus, productId, variantId, inventoryTypes, initiatedShipmentDisplayIds)
            //result shouldBe ("TODO")
        }

        // to test getOrder
        should("test getOrder") {
            // uncomment below to test getOrder
            //val orderNumber : kotlin.String = orderNumber_example // kotlin.String | The unique order number. Standard example: 323314425-323214184. Flex example: 02-L0QT6MRVSG
            //val result : DetailedOrder = apiInstance.getOrder(orderNumber)
            //result shouldBe ("TODO")
        }

        // to test getOrderShipment
        should("test getOrderShipment") {
            // uncomment below to test getOrderShipment
            //val jwtAuthorization : kotlin.String = jwtAuthorization_example // kotlin.String | 
            //val authorization : kotlin.String = authorization_example // kotlin.String | 
            //val orderNumber : kotlin.String = 323314425-323214184 // kotlin.String | The number of order to fetch
            //val shippingId : kotlin.String = 323314425-323214184 // kotlin.String | The shipping ID of order to fetch
            //val result : kotlin.Any = apiInstance.getOrderShipment(jwtAuthorization, authorization, orderNumber, shippingId)
            //result shouldBe ("TODO")
        }

        // to test getOrders
        should("test getOrders") {
            // uncomment below to test getOrders
            //val pageNumber : kotlin.Int = 56 // kotlin.Int | The number of page
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Requested page number. Starts at 1
            //val orderStatus : kotlin.String = CREATED // kotlin.String | To filter your Orders by a given order status<br><br>Available values: \"CREATED\", \"CCAUTHORIZATIONFAILED\", \"SHIPPED\", \"RECEIVED\", \"AUTHENTICATING\", \"AUTHENTICATED\", \"PAYOUTPENDING\", \"PAYOUTCOMPLETED\", \"SYSTEMFULFILLED\", \"PAYOUTFAILED\", \"SUSPENDED\"
            //val productId : kotlin.String = productId_example // kotlin.String | Unique identifier for a product
            //val variantId : kotlin.String = variantId_example // kotlin.String | Unique identifier for a products variant
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | The field by which the results are sorted. Defaults to \"CREATEDAT\" and can also accept \"SHIPBYDATE\".
            //val inventoryTypes : kotlin.String = STANDARD // kotlin.String | Comma-separated list of inventory type(s). This field must not include array brackets [] or quotation marks (\"| ''). The inventory types are STANDARD or FLEX.
            //val initiatedShipmentDisplayIds : kotlin.String = initiatedShipmentDisplayIds_example // kotlin.String | The shipment's unique display id associated with the order. Note: This is the same ID generated when a Flex inbound list is created in StockX Pro.
            //val result : Orders = apiInstance.getOrders(pageNumber, pageSize, orderStatus, productId, variantId, sortOrder, inventoryTypes, initiatedShipmentDisplayIds)
            //result shouldBe ("TODO")
        }

    }
}
